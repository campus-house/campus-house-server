openapi: 3.0.3
info:
  title: 캠퍼스 하우스 API
  description: 대학생 자취 커뮤니티 앱의 백엔드 API 문서
  version: 1.0.0
  contact:
    name: Campus House Team
    email: contact@campushouse.com
    url: https://campushouse.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080
    description: 개발 서버
  - url: https://api.campushouse.com
    description: 프로덕션 서버
security:
  - bearerAuth: []
paths:
  /api/chat/rooms:
    post:
      tags:
        - 채팅
      summary: 채팅방 생성/조회
      description: 이미 채팅방이 있으면 기존 방 반환, 없으면 새 방 생성
      security:
        - bearerAuth: []
      parameters:
        - name: otherUserName
          in: query
          required: true
          description: 상대방 사용자 닉네임
          schema:
            type: string
            example: 홍길동
      responses:
        '200':
          description: 채팅방 조회/생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomResponse'
              example:
                id: 1
                otherUserName: 홍길동
                otherUserNickname: 홍길동
                otherUserProfileImage: https://example.com/profile.jpg
                createdAt: '2024-01-15T10:30:00'
                lastMessageTime: '2024-01-15T14:25:00'
                lastMessageContent: 안녕하세요!
                unreadCount: 3
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 필요
  /api/chat/rooms/user/{userName}:
    get:
      tags:
        - 채팅
      summary: 사용자 채팅방 목록
      description: 특정 사용자의 채팅방 목록을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: userName
          in: path
          required: true
          description: 사용자 닉네임
          schema:
            type: string
            example: 홍길동
      responses:
        '200':
          description: 채팅방 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoomResponse'
        '401':
          description: 인증 필요
        '403':
          description: 다른 사용자의 채팅방 목록 조회 권한 없음
  /api/chat/rooms/{roomId}:
    get:
      tags:
        - 채팅
      summary: 채팅방 조회
      description: 특정 채팅방의 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          description: 채팅방 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 채팅방 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomResponse'
        '404':
          description: 채팅방을 찾을 수 없음
        '403':
          description: 채팅방 접근 권한 없음
  /api/chat/rooms/users/{user1Name}/{user2Name}:
    get:
      tags:
        - 채팅
      summary: 두 사용자 간 채팅방 조회
      description: 두 사용자 간의 채팅방을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: user1Name
          in: path
          required: true
          description: 사용자1 닉네임
          schema:
            type: string
            example: 홍길동
        - name: user2Name
          in: path
          required: true
          description: 사용자2 닉네임
          schema:
            type: string
            example: 김철수
      responses:
        '200':
          description: 채팅방 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomResponse'
        '404':
          description: 채팅방을 찾을 수 없음
        '403':
          description: 채팅방 접근 권한 없음
  /api/chat/rooms/{roomId}/messages:
    post:
      tags:
        - 채팅
      summary: 메시지 전송
      description: 채팅방에 메시지를 전송합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          description: 채팅방 ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
            example:
              content: 안녕하세요!
              messageType: TEXT
      responses:
        '200':
          description: 메시지 전송 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageResponse'
              example:
                id: 1
                content: 안녕하세요!
                imageUrl: null
                messageType: TEXT
                senderName: 홍길동
                senderNickname: 홍길동
                senderProfileImage: https://example.com/profile.jpg
                createdAt: '2024-01-15T14:25:00'
                isFromCurrentUser: true
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 필요
        '403':
          description: 채팅방 접근 권한 없음
    get:
      tags:
        - 채팅
      summary: 메시지 목록 조회
      description: 채팅방의 메시지 목록을 조회합니다. (페이징 지원)
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          description: 채팅방 ID
          schema:
            type: integer
            example: 1
        - name: page
          in: query
          description: 페이지 번호 (0부터 시작)
          schema:
            type: integer
            default: 0
            example: 0
        - name: size
          in: query
          description: 페이지당 메시지 수
          schema:
            type: integer
            default: 20
            example: 20
      responses:
        '200':
          description: 메시지 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessageResponse'
        '404':
          description: 채팅방을 찾을 수 없음
        '403':
          description: 채팅방 접근 권한 없음
  /api/chat/rooms/{roomId}/read:
    post:
      tags:
        - 채팅
      summary: 메시지 읽음 처리
      description: 채팅방의 메시지를 읽음 처리합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          description: 채팅방 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 읽음 처리 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 읽음 처리 완료
        '401':
          description: 인증 필요
        '403':
          description: 채팅방 접근 권한 없음
  /api/chat/unread-count/{userName}:
    get:
      tags:
        - 채팅
      summary: 읽지 않은 메시지 수 조회
      description: 사용자의 읽지 않은 메시지 수를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: userName
          in: path
          required: true
          description: 사용자 닉네임
          schema:
            type: string
            example: 홍길동
      responses:
        '200':
          description: 읽지 않은 메시지 수 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadCount:
                    type: integer
                    example: 5
        '401':
          description: 인증 필요
        '403':
          description: 다른 사용자의 읽지 않은 메시지 수 조회 권한 없음
  /api/chat/rooms/{roomId}/unread-count/{userName}:
    get:
      tags:
        - 채팅
      summary: 특정 채팅방 읽지 않은 메시지 수
      description: 특정 채팅방의 읽지 않은 메시지 수를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          description: 채팅방 ID
          schema:
            type: integer
            example: 1
        - name: userName
          in: path
          required: true
          description: 사용자 닉네임
          schema:
            type: string
            example: 홍길동
      responses:
        '200':
          description: 읽지 않은 메시지 수 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadCount:
                    type: integer
                    example: 2
        '401':
          description: 인증 필요
        '403':
          description: 채팅방 접근 권한 없음
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 토큰을 입력하세요. 예: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
  schemas:
    ChatRoomResponse:
      type: object
      description: 채팅방 응답 정보
      properties:
        id:
          type: integer
          description: 채팅방 ID
          example: 1
        otherUserName:
          type: string
          description: 상대방 사용자 이름
          example: 홍길동
        otherUserNickname:
          type: string
          description: 상대방 사용자 닉네임
          example: 홍길동
        otherUserProfileImage:
          type: string
          description: 상대방 프로필 이미지 URL
          example: https://example.com/profile.jpg
        createdAt:
          type: string
          format: date-time
          description: 채팅방 생성 시간
          example: '2024-01-15T10:30:00'
        lastMessageTime:
          type: string
          format: date-time
          description: 마지막 메시지 시간
          example: '2024-01-15T14:25:00'
        lastMessageContent:
          type: string
          description: 마지막 메시지 내용
          example: 안녕하세요!
        unreadCount:
          type: integer
          description: 읽지 않은 메시지 수
          example: 3
    ChatMessageResponse:
      type: object
      description: 채팅 메시지 응답 정보
      properties:
        id:
          type: integer
          description: 메시지 ID
          example: 1
        content:
          type: string
          description: 메시지 내용
          example: 안녕하세요!
        imageUrl:
          type: string
          description: 이미지 URL
          example: https://example.com/image.jpg
        messageType:
          type: string
          description: 메시지 타입
          enum: [TEXT, IMAGE, FILE]
          example: TEXT
        senderName:
          type: string
          description: 발신자 이름
          example: 홍길동
        senderNickname:
          type: string
          description: 발신자 닉네임
          example: 홍길동
        senderProfileImage:
          type: string
          description: 발신자 프로필 이미지 URL
          example: https://example.com/profile.jpg
        createdAt:
          type: string
          format: date-time
          description: 메시지 생성 시간
          example: '2024-01-15T14:25:00'
        isFromCurrentUser:
          type: boolean
          description: 현재 사용자가 보낸 메시지인지 여부
          example: true
    SendMessageRequest:
      type: object
      description: 메시지 전송 요청
      required:
        - content
        - messageType
      properties:
        content:
          type: string
          description: 메시지 내용
          example: 안녕하세요!
        imageUrl:
          type: string
          description: 이미지 URL
          example: https://example.com/image.jpg
        messageType:
          type: string
          description: 메시지 타입
          enum: [TEXT, IMAGE, FILE]
          example: TEXT
